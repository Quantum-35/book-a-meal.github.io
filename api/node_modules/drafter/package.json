{
  "_args": [
    [
      {
        "raw": "drafter@^1.0.0",
        "scope": null,
        "escapedName": "drafter",
        "name": "drafter",
        "rawSpec": "^1.0.0",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "/Users/quantumcomputing/Movies/Andela/AndelaProject/realChallangeProject/AndelaChallenge/book-a-meal.github.io/api/node_modules/aglio"
    ]
  ],
  "_from": "drafter@>=1.0.0 <2.0.0",
  "_id": "drafter@1.2.0",
  "_inCache": true,
  "_location": "/drafter",
  "_nodeVersion": "4.0.0",
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/drafter-1.2.0.tgz_1477930911369_0.2591197022702545"
  },
  "_npmUser": {
    "name": "pksunkara",
    "email": "pavan.sss1991@gmail.com"
  },
  "_npmVersion": "3.10.8",
  "_phantomChildren": {},
  "_requested": {
    "raw": "drafter@^1.0.0",
    "scope": null,
    "escapedName": "drafter",
    "name": "drafter",
    "rawSpec": "^1.0.0",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/aglio"
  ],
  "_resolved": "https://registry.npmjs.org/drafter/-/drafter-1.2.0.tgz",
  "_shasum": "f4d11e8dee1f27f9a40485b8740c44361e9cf859",
  "_shrinkwrap": null,
  "_spec": "drafter@^1.0.0",
  "_where": "/Users/quantumcomputing/Movies/Andela/AndelaProject/realChallangeProject/AndelaChallenge/book-a-meal.github.io/api/node_modules/aglio",
  "author": {
    "name": "Apiary Czech Republic, s.r.o.",
    "email": "support@apiary.io"
  },
  "bugs": {
    "url": "https://github.com/apiaryio/drafter-npm/issues"
  },
  "dependencies": {
    "drafter.js": "^2.6.0",
    "protagonist": "^1.6.0"
  },
  "description": "Node API Blueprint Parser",
  "devDependencies": {
    "chai": "~1.9.0",
    "mocha": "~1.17.1"
  },
  "directories": {},
  "dist": {
    "shasum": "f4d11e8dee1f27f9a40485b8740c44361e9cf859",
    "tarball": "https://registry.npmjs.org/drafter/-/drafter-1.2.0.tgz"
  },
  "engines": {
    "node": ">= 0.12"
  },
  "gitHead": "6f76af943830005622d21890f7e1bb12f6512435",
  "homepage": "https://github.com/apiaryio/drafter-npm",
  "license": "MIT",
  "main": "lib/drafter.js",
  "maintainers": [
    {
      "name": "apiary-sre",
      "email": "sre@apiary.io"
    },
    {
      "name": "danielgtaylor",
      "email": "danielgtaylor@gmail.com"
    },
    {
      "name": "kylef",
      "email": "kyle@fuller.li"
    },
    {
      "name": "pksunkara",
      "email": "pavan.sss1991@gmail.com"
    },
    {
      "name": "zdne",
      "email": "z@apiary.io"
    }
  ],
  "name": "drafter",
  "optionalDependencies": {
    "protagonist": "^1.6.0"
  },
  "readme": "![logo](https://raw.github.com/apiaryio/api-blueprint/master/assets/logo_apiblueprint.png)\n\n# Drafter NPM Package [![Build Status](https://travis-ci.org/apiaryio/drafter-npm.svg?branch=master)](https://travis-ci.org/apiaryio/drafter-npm)\n\nThe Drafter NPM package is an API Blueprint parser for Node. This package is a\nwrapper around the underlying C++ parser\n[Drafter](https://github.com/apiaryio/drafter). Drafter NPM optionally depends\non the C++ binding to Drafter\n[Protagonist](https://github.com/apiaryio/protagonist). If for any reason\nProtagonist is not installable, this package will fallback to using the slower,\npure JavaScript version of Drafter,\n[drafter.js](https://github.com/apiaryio/drafter.js).\n\n## Installation\n\nDrafter can be installed from NPM. If you want to use Drafter from a web\nbrowser, check out [drafter.js](https://github.com/apiaryio/drafter.js).\n\n```shell\n$ npm install drafter\n```\n\n## Usage\n\n```js\nvar drafter = require('drafter');\n```\n\nOnce you've included drafter, you can parse an API Blueprint asynchronously:\n\n```js\nvar options = {\n  generateSourcemap: true,\n};\n\ndrafter.parse('# API Blueprint...', options, function(err, result) {\n  if (err) {\n    console.log(err);\n  } else {\n    console.log(result);\n  }\n});\n```\n\nAlternatively, you can use Drafter synchronously:\n\n```js\ntry {\n  var result = drafter.parse('# API Blueprint...', options);\n  console.log(result);\n} catch (err) {\n  console.log(err);\n}\n```\n\n### Parsing Options\n\nOptions can be passed to the parser as an optional second argument to both the\nasynchronous and synchronous interfaces:\n\n```js\nvar options = {\n  generateSourceMap: true\n}\n\ndrafter.parse('# My API', options, callback);\n```\n\nThe available options are:\n\nName                   | Description\n---------------------- | ----------------------------------------------------------\n`requireBlueprintName` | Require parsed blueprints have a title (default: false)\n`generateSourceMap`    | Enable sourcemap generation (default: false)\n`type`                 | Set the output structure type as either `ast` or `refract` (default: `refract`)\n\n**NOTE**: *The `ast` option is deprecated in favour of `refract`.*\n\n## License\n\nMIT License. See the [LICENSE](LICENSE) file.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/apiaryio/drafter-npm.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "version": "1.2.0"
}
